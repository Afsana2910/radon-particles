tosca_definitions_version: tosca_simple_yaml_1_3

metadata:
  targetNamespace: "radon.blueprints"
topology_template:
  inputs:
    secret_api_key:
      type: string
      required: true
    api_key:
      type: string
      required: true
  node_templates:
    AwsS3Bucket:
      type: radon.nodes.aws.AwsS3Bucket
      metadata:
        x: "278"
        y: "289"
        displayName: "uploads"
      properties:
        size: "0 MB"
        name: "input"
        maxsize: null
      requirements:
        - host:
            node: AwsPlatform
            relationship: con_HostedOn_0
            capability: host
        - invoker:
            node: AwsLambdaFunction
            relationship: con_AwsTriggers_0
            capability: invocable
    AwsLambdaFunction:
      type: radon.nodes.aws.AwsLambdaFunction
      metadata:
        x: "688"
        y: "98"
        displayName: "create_thumbnail"
      properties:
        role_name: "create_thumbnail_role"
        handler: "index.handler"
        schedule: null
        environment: "prod"
        memory: 512
        name: "create_thumbnail"
        runtime: "nodejs"
        timeout: 3
        role_description: "create_thumbnail_role"
      requirements:
        - endpoint:
            node: AwsS3Bucket_2
            relationship: con_ConnectsTo_0
            capability: storage_endpoint
        - host:
            node: AwsPlatform
            relationship: con_HostedOn_2
            capability: host
    AwsS3Bucket_2:
      type: radon.nodes.aws.AwsS3Bucket
      metadata:
        x: "1093"
        y: "239"
        displayName: "thumbnails"
      properties:
        size: "0 MB"
        name: "thumbnails"
        maxsize: null
      requirements:
        - host:
            node: AwsPlatform
            relationship: con_HostedOn_1
            capability: host
    AwsPlatform:
      type: radon.nodes.aws.AwsPlatform
      metadata:
        x: "682"
        y: "454"
        displayName: "eu-west-1"
      properties:
        access_key_id: { get_input: api_key }
        secret_access_key: { get_input: secret_api_key }
        name: "Ireland"
        region: "eu-west-1"
  relationship_templates:
    con_HostedOn_2:
      type: tosca.relationships.HostedOn
    con_HostedOn_0:
      type: tosca.relationships.HostedOn
    con_HostedOn_1:
      type: tosca.relationships.HostedOn
    con_ConnectsTo_0:
      type: tosca.relationships.ConnectsTo
      properties:
        credential: null
    con_AwsTriggers_0:
      type: radon.relationships.aws.AwsTriggers
      properties:
        events: "s3:ObjectCreated:*"
